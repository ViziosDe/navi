% Active Directory Enumeration & Management

# List all user accounts in the current domain (returns default properties)
Get-ADUser -Filter * -Properties *

# List user accounts with specific properties (replace <properties> with comma-separated property names such as DisplayName,LastLogonDate)
Get-ADUser -Filter * -Properties <properties> | Select-Object SamAccountName,<properties>

# Find all disabled user accounts
Get-ADUser -Filter {Enabled -eq $False} -Properties Enabled | Select-Object SamAccountName,Enabled

# Find all users whose password never expires
Get-ADUser -Filter {PasswordNeverExpires -eq $True} -Properties PasswordNeverExpires | Select-Object SamAccountName,PasswordNeverExpires

# List members of a specific group (e.g., Domain Admins)
Get-ADGroupMember -Identity "<groupname>" -Recursive | Select-Object Name,SamAccountName,ObjectClass

# List service account users, including group-managed service accounts (gMSA)
Get-ADServiceAccount -Filter * -Properties * | Select-Object Name,SamAccountName,ManagedPasswordIntervalInDays

# Retrieve the principals allowed to read a gMSA password
Get-ADServiceAccount -Identity <username> -Properties * | Select-Object -ExpandProperty PrincipalsAllowedToRetrieveManagedPassword

# List all computer objects
Get-ADComputer -Filter * -Properties *

# List computer objects with specific properties (replace <properties> with comma-separated property names)
Get-ADComputer -Filter * -Properties <properties> | Select-Object Name,<properties>

# Find computers with unconstrained delegation enabled
Get-ADComputer -Filter {TrustedForDelegation -eq $True} -Properties TrustedForDelegation | Select-Object Name,TrustedForDelegation

# Find user accounts with unconstrained delegation enabled
Get-ADUser -Filter {TrustedForDelegation -eq $True} -Properties TrustedForDelegation | Select-Object SamAccountName,TrustedForDelegation

# Enumerate organizational units (OUs) in a domain
Get-ADOrganizationalUnit -Filter * -Properties * | Select-Object Name,DistinguishedName

# List all groups in the domain
Get-ADGroup -Filter * -Properties *

# Find a specific group by name
Get-ADGroup -Identity "<groupname>"

# Add a user to a domain group
Add-ADGroupMember -Identity "<groupname>" -Members "<username>" -Verbose

# Remove a user from a domain group
Remove-ADGroupMember -Identity "<groupname>" -Members "<username>" -Confirm:$False

# Set a Service Principal Name (SPN) on a user account (required for Kerberos authentication)
Set-ADUser -Identity "<username>" -ServicePrincipalNames @{Add='<domain>/<serviceprincipalname>'}

# Enumerate accounts with Service Principal Names set (useful for Kerberoasting)
Get-ADUser -Filter {ServicePrincipalName -ne $Null} -Properties ServicePrincipalName | Select-Object SamAccountName,ServicePrincipalName

# Find accounts that are allowed to delegate (constrained delegation)
Get-ADUser -Filter {msDS-AllowedToDelegateTo -like '*'} -Properties msDS-AllowedToDelegateTo | Select-Object SamAccountName,msDS-AllowedToDelegateTo

# Get details about the current forest
Get-ADForest

# Enumerate all domains in the current forest
(Get-ADForest).Domains

# List all global catalog servers in the current forest
Get-ADForest | Select-Object -ExpandProperty GlobalCatalogs

# List domain trusts for the current domain
Get-ADTrust

# List domain trusts for a specific domain
Get-ADTrust -Identity <domain-name>

# Map external trusts in a forest
(Get-ADForest).Domains | ForEach-Object { Get-ADTrust -Filter '(intraForest -ne $True) -and (ForestTransitive -ne $True)' -Server $_ }

# Read Local Administrator Password Solution (LAPS) password of a computer
Get-ADComputer -Identity <computername> -Properties ms-mcs-admpwd | Select-Object -ExpandProperty ms-mcs-admpwd
